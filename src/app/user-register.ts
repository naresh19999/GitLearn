import { Data } from '@angular/router';

export class UserRegister {
    id:number;
    applicantName:string;
    passportNumber:string;
	countryOfNationality:string;
	gender:string;
    dateOfBirth:string;
    dateOfApplication:string;
	typeOfVisa:string;
    serviceOption:string;
    durationOfVisa:string;
    totalFee:number;
    submissionMethod:string;
    paymentReference:string;
    contactEmail:string;
    contactLanguage:string;
    placeOfBirth:string;
    countryOfBirth:string;
    relationStatus:string;
    alternativeEmail:string;
    emailAddressBelongdTo:string;
    doHaveOtherName:string;
    familyName:string;
    planToLeaveUk:Date;
    planToArriveUk:Date;
    purposeOfVisit:string;
    howMuchPaid:number;
    whoPaid:string;
    PassportReference:string;
    expiryDate:Date;
    issueDate:Date;
    ableToContactTelephone:string;
    medicalTreatmentInUk:string;
    doUkDrivingLicence:string;
    address:string;
    ownershipStatusOfHome:string;
    nicEmployeeAddress:string;
    nicEmployementStatus:string;
    ddFamilyName:string;
    familyNames:string[];
    relationToPerson:string;
    previousVisitCountry:string;
    refusedVisa:string;
    refusedBorder:string;
    constructor(id:number,
                applicantName:string,
                passportNumber:string,
                countryOfNationality:string,
                gender:string,
                dateOfBirth:string,
                dateOfApplication:string,
                typeOfVisa:string,
                 serviceOption:string,
                 durationOfVisa:string,
    totalFee:number,
    submissionMethod:string,
    paymentReference:string,
    contactEmail:string,
    contactLanguage:string,
    placeOfBirth:string,
    countryOfBirth:string,
    relationStatus:string,
    alternativeEmail:string,
    emailAddressBelongdTo:string,
    doHaveOtherName:string,
    familyName:string,
    planToLeaveUk:Date,
    planToArriveUk:Date,
    purposeOfVisit:string,
    howMuchPaid:number,
    whoPaid:string,
    PassportReference:string,
    expiryDate:Date,
    issueDate:Date,
    ableToContactTelephone:string,
    medicalTreatmentInUk:string,
    doUkDrivingLicence:string,
    address:string,
    ownershipStatusOfHome:string,
    nicEmployeeAddress:string,
    nicEmployementStatus:string,
    ddFamilyName:string,
    familyNames:string[],
    relationToPerson:string,
    previousVisitCountry:string,
    refusedVisa:string,
    refusedBorder:string){
                     this.id=id;
                     this.applicantName=applicantName;
                     this.passportNumber=passportNumber;
                     this.countryOfNationality=countryOfNationality;
                     this.gender=gender;
                     this.dateOfBirth=dateOfBirth;
                     this.typeOfVisa=typeOfVisa;
                     this.serviceOption=serviceOption;
                     this.durationOfVisa=durationOfVisa;
                     this.totalFee=totalFee;
                     this.submissionMethod=submissionMethod;
                     this.paymentReference=paymentReference;
                     this.contactEmail=contactEmail;
                     this.contactLanguage=contactLanguage;
                     this.placeOfBirth=placeOfBirth;
                     this.countryOfBirth=countryOfBirth;
                     this.relationStatus=relationStatus;
                     this.alternativeEmail=alternativeEmail;
                     this.emailAddressBelongdTo=emailAddressBelongdTo;
                     this.doHaveOtherName=doHaveOtherName;
                     this.familyName=familyName;
                     this.familyNames=familyNames;
                     this.planToLeaveUk=planToLeaveUk;
                     this.planToArriveUk=planToArriveUk;
                     this.purposeOfVisit=purposeOfVisit;
                     this.howMuchPaid=howMuchPaid;
                     this.whoPaid=whoPaid;
                     this.PassportReference=PassportReference;
                     this.expiryDate=expiryDate;
                     this.issueDate=issueDate;
                     this.ableToContactTelephone=ableToContactTelephone;
                     this.medicalTreatmentInUk=medicalTreatmentInUk;
                     this.doUkDrivingLicence=doUkDrivingLicence;
                     this.address=address;
                     this.ownershipStatusOfHome=ownershipStatusOfHome;
                     this.nicEmployeeAddress=nicEmployeeAddress;
                     this.nicEmployementStatus=nicEmployementStatus;
                     this.ddFamilyName=ddFamilyName;
                     this.relationToPerson=relationToPerson;
                     this.previousVisitCountry=previousVisitCountry;
                     this.refusedVisa=refusedVisa;
                     this.refusedBorder=refusedBorder;
                 }
        

}
